name: CI - Build, Test & SonarQube (Sirha)

on:
  push:
    branches: [ "release1.2" ]
  pull_request:
    branches: [ "release1.2" ]

permissions:
  contents: read

jobs:
  build_test_sonar:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:lts
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube server..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "âœ… SonarQube is up!"
              break
            fi
            echo "Waiting... ($i)"
            sleep 5
          done

      - name: Build and run tests (JaCoCo)
        run: mvn -B clean verify

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports

      - name: Upload JaCoCo coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Run SonarQube analysis
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=sirha \
            -Dsonar.projectName="Sirha" \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN}
